---
import Icon from "./Icon.astro";
import ThemeToggle from "./ThemeToggle.astro";
import type { iconPaths } from "./IconPaths";
import { Image } from "astro:assets";
import logo from "../images/starr-designs-logo.svg";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "Printing Services", href: "/services/" },
  { label: "About", href: "/about/" },
];

const contactHref =
  Astro.url.pathname === "/about/"
    ? "/#contact"
    : `${Astro.url.pathname}#contact`;
---

<nav id="top">
  <div class="menu-header">
    <a href="/" class="site-title">
      <Image src={logo} width={48} alt="" />
      Starr Designs
    </a>
    <menu-button>
      <template>
        <button class="menu-button" aria-expanded="false">
          <span class="sr-only">Menu</span>
          <Icon icon="list" />
        </button>
      </template>
    </menu-button>
  </div>
  <noscript>
    <ul class="nav-items">
      {
        textLinks.map(({ label, href }) => (
          <li>
            <a
              aria-current={Astro.url.pathname === href}
              class:list={[
                "link",
                {
                  active:
                    Astro.url.pathname === href ||
                    (href !== "/" && Astro.url.pathname.startsWith(href)),
                },
              ]}
              href={href}
            >
              {label}
            </a>
          </li>
        ))
      }
      <li><a href={contactHref} class="contact">Contact Us</a></li>
    </ul>
  </noscript>
  <div id="menu-content" hidden>
    <ul class="nav-items">
      {
        textLinks.map(({ label, href }) => (
          <li>
            <a
              aria-current={Astro.url.pathname === href}
              class:list={[
                "link",
                {
                  active:
                    Astro.url.pathname === href ||
                    (href !== "/" && Astro.url.pathname.startsWith(href)),
                },
              ]}
              href={href}
            >
              {label}
            </a>
          </li>
        ))
      }
      <li><a href={contactHref} class="contact">Contact Us</a></li>
    </ul>
  </div>
</nav>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector("template")!.content.cloneNode(true));
      const btn = this.querySelector("button")!;

      // Hide menu (shown by default to support no-JS browsers).
      const menu = document.getElementById("menu-content")!;
      menu.hidden = true;
      // Add "menu-content" class in JS to avoid covering content in non-JS browsers.
      menu.classList.add("menu-content");

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand: boolean) => {
        btn.setAttribute("aria-expanded", expand ? "true" : "false");
        menu.hidden = !expand;
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener("click", () => setExpanded(menu.hidden));

      // Hide menu button for large screens.
      const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia("(min-width: 50em)");
      handleViewports(mediaQueries);
      mediaQueries.addEventListener("change", handleViewports);
    }
  }
  customElements.define("menu-button", MenuButton);
</script>

<style>
  nav {
    z-index: 9999;
    position: relative;
    font-family: var(--font-brand);
    font-weight: 500;
    background-color: var(--background-color);
  }

  .menu-header {
    display: flex;
    justify-content: space-between;
    gap: 0.5rem;
    padding: 1.5rem;
  }

  .site-title {
    display: flex;
    gap: 16px;
    align-items: center;
    line-height: 1.1;
    font-size: var(--text-xl);
    color: var(--pop-color);
    text-decoration: none;
    background-color: #ffffff;
    padding: 12px 24px;
    border-radius: 1000vw;
  }

  .menu-button {
    position: relative;
    display: flex;
    border: 0;
    border-radius: 999rem;
    padding: 0.5rem;
    font-size: 1.5rem;
    color: var(--pop-color);
    background-color: #ffffff;
    /* box-shadow: var(--shadow-md); */
  }

  .menu-button[aria-expanded="true"] {
    background-color: var(--pop-color);
    color: #ffffff;
  }

  .menu-button[hidden] {
    display: none;
  }

  .menu-button::before {
    position: absolute;
    inset: -1px;
    content: "";
    border-radius: 999rem;
    z-index: -1;
  }

  .menu-content {
    position: absolute;
    left: 0;
    right: 0;
    background-color: var(--background-color);
  }

  .nav-items {
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: var(--text-md);
    line-height: 1.2;
    list-style: none;
    padding: 0 32px 16px;
    border-bottom: 1px solid var(--gray-800);
  }

  .link {
    display: inline-block;
    position: relative;
    color: var(--text-color);
    text-decoration: none;
  }

  .link::before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: -4px;
    height: 3px;
    background-color: var(--text-color);
    scale: 0 1;
  }

  .link.active::before {
    scale: 1 1;
  }

  .link:hover,
  .link:focus {
    color: var(--pop-color);
  }

  .link:hover::before,
  .link:focus::before {
    background-color: var(--pop-color);
    scale: 1 1;
  }

  .contact {
    padding: 0.56em 2em;
    color: var(--accent-text-over);
    text-decoration: none;
    line-height: 1.1;
    border-radius: 999rem;
    background: var(--pop-color);
  }

  @media (min-width: 50em) {
    nav {
      display: grid;
      grid-template-columns: 1fr auto;
      align-items: center;
      padding: 16px 72px;
      gap: 16px;
    }

    .menu-header {
      padding: 0;
    }

    .site-title {
      font-size: var(--text-xl);
    }

    .menu-content {
      display: contents;
    }

    .nav-items {
      position: relative;
      flex-direction: row;
      flex-wrap: wrap;
      border: 0;
      gap: 32px;
      padding: 0;
    }

    .contact {
      margin-inline-start: 32px;
    }
  }
</style>
